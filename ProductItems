<template>
    <lightning-card title="Product Request">
        <div class="slds-p-around_medium">
            <!-- Search input field -->
            <lightning-input type="search" label="Search" value={searchTerm} onchange={handleSearch}></lightning-input>
            
            <template if:true={filteredProductItems}>
                <table class="slds-table slds-table_cell-buffer slds-table_bordered">
                    <thead>
                        <tr>
                            <th scope="col">Product Name</th>
                            <th scope="col">Quantity On Hand</th>
                            <th scope="col">Request Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        <template for:each={filteredProductItems} for:item="product">
                            <tr key={product.Id}>
                                <td>{product.Product2.Name}</td>
                                <td>{product.QuantityOnHand}</td>
                                <td>
                                    <lightning-input type="number" value={product.requestedQuantity} onchange={handleQuantityChange} data-id={product.Id} max={product.QuantityOnHand}></lightning-input>
                                </td>
                            </tr>
                        </template>
                    </tbody>
                </table>
                <div class="slds-m-top_medium">
                    <lightning-button label="Request" onclick={handleRequestAll}></lightning-button>
                </div>
            </template>
            <template if:false={filteredProductItems}>
                No product items found.
            </template>
        </div>
    </lightning-card>
</template>












public with sharing class ProductController {
    @AuraEnabled(cacheable=true)
    public static List<ProductItem> getProductItems(String locationId) {
        locationId = '1315g000000lQpvAAE';
        // Query and return product items from the specified location
        return [SELECT Id, Product2.Name, QuantityOnHand FROM ProductItem WHERE LocationId = :locationId];
    }

    @AuraEnabled
    public static void updateRequestedQuantity(String productId, Integer requestedQuantity) {
        // Implement logic to update requested quantity against the product ID
        // Subtract requested quantity from quantity on hand directly
        System.debug('ProductId------>' + productId);
        System.debug('RequestedQuanity-->' + requestedQuantity);
        ProductItem productItem = new ProductItem(Id = productId);
        if (requestedQuantity >= 0) {
            // Subtract requested quantity from quantity on hand
            productItem.QuantityOnHand = requestedQuantity;
            update productItem;
        } else {
            throw new AuraHandledException('Invalid requested quantity.');
        }
    }
}




