<!-- formFields.html -->
<template>
    <lightning-card title="Issue Form" icon-name="utility:record">
        <div class="slds-p-around_medium">
            <div class="slds-grid slds-wrap">
                <div class="slds-size_1-of-2 slds-p-vertical_medium">
                    <lightning-input-field field-name="WorkOrder__c" onchange={handleWorkOrderIdChange}></lightning-input-field>
                    <lightning-input label="Issue" value={issue} onchange={handleIssueChange}></lightning-input>
                    <lightning-input label="Part Code" value={partCode} onchange={handlePartCodeChange}></lightning-input>
                    <lightning-input label="Model Number" value={modelNumber} onchange={handleModelNumberChange}></lightning-input>
                    <lightning-input label="Reason for Replacement" value={reasonForReplacement} onchange={handleReasonChange}></lightning-input>
                    <lightning-input label="Quantity" type="number" value={quantity} onchange={handleQuantityChange}></lightning-input>
                    <lightning-combobox label="Address of Material Delivery" options={deliveryOptions} value={selectedDeliveryOption} onchange={handleDeliveryChange}></lightning-combobox>
                </div>
                <div class="slds-size_1-of-2 slds-p-vertical_medium">
                    <div class="custom-file-upload">
                        <lightning-input label="Upload Photo with Serial Number" type="file" onchange={handleSerialNumberChange} required></lightning-input>
                        <lightning-input label="Customer Invoice Photograph" type="file" onchange={handleInvoicePhotoChange} required></lightning-input>
                    </div>
                    <div class="slds-p-top_medium">
                        <lightning-button label="Save" variant="brand" onclick={handleSave}></lightning-button>
                    </div>
                </div>
            </div>
        </div>
    </lightning-card>
</template>





// formFields.js
import { LightningElement, track, wire } from 'lwc';
import saveFormData from '@salesforce/apex/YourApexClass.saveFormData';

export default class FormFields extends LightningElement {
    @track issue;
    @track partCode;
    @track modelNumber;
    @track reasonForReplacement;
    @track quantity;
    @track selectedDeliveryOption;
    @track workOrderId;
    @track serialNumberFile;
    @track invoiceFile;

    deliveryOptions = [
        { label: 'ASP', value: 'ASP' },
        { label: 'Customer', value: 'Customer' }
    ];

    handleIssueChange(event) {
        this.issue = event.target.value;
    }

    handlePartCodeChange(event) {
        this.partCode = event.target.value;
    }

    handleModelNumberChange(event) {
        this.modelNumber = event.target.value;
    }

    handleReasonChange(event) {
        this.reasonForReplacement = event.target.value;
    }

    handleQuantityChange(event) {
        this.quantity = event.target.value;
    }

    handleWorkOrderIdChange(event) {
        this.workOrderId = event.detail.value[0];
    }

    handleDeliveryChange(event) {
        this.selectedDeliveryOption = event.detail.value;
    }

    handleSerialNumberChange(event) {
        this.serialNumberFile = event.target.files[0];
    }

    handleInvoicePhotoChange(event) {
        this.invoiceFile = event.target.files[0];
    }

    handleSave() {
        // Prepare data to send to Apex method
        const formData = {
            issue: this.issue,
            partCode: this.partCode,
            modelNumber: this.modelNumber,
            reasonForReplacement: this.reasonForReplacement,
            quantity: this.quantity,
            selectedDeliveryOption: this.selectedDeliveryOption,
            workOrderId: this.workOrderId,
            serialNumberFile: this.serialNumberFile,
            invoiceFile: this.invoiceFile
        };

        // Call Apex method to save data
        saveFormData({ formData: formData })
            .then(result => {
                // Handle success
            })
            .catch(error => {
                // Handle error
            });
    }
}

